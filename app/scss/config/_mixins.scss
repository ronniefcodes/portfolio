// FONT MIXIN
// --------------------------------|
@mixin declare-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
  @font-face {
    font-family: '#{$font-family}';
    src: url('../fonts/#{$font-filename}.eot');
    src: url('../fonts/#{$font-filename}.eot?#iefix') format('embedded-opentype'),
    url('../fonts/#{$font-filename}.woff') format('woff'),
    url('../fonts/#{$font-filename}.ttf') format('truetype'),
    url('../fonts/#{$font-filename}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
    font-stretch: $font-stretch;
  }
}

@mixin font($font-name: $font-family, $size: $text-size, $color: $text-color, $uppercase: normal) {
	font-family: $font-name;
	font-size: $size;
	color: $color;
	text-transform: $uppercase;
}

// BREAKPOINT MIXIN
// --------------------------------|

@mixin bp-min($point) {
	@if $point == mobile {
		@media (min-width: $screen-mobile) { @content; }
	}
	@else if $point == tablet {
		@media (min-width: $screen-tablet) and (min-height: $screen-landscape) { @content; }
	}
	@else if $point == desktop {
		@media (min-width: $screen-desktop) and (min-height: $screen-landscape) { @content; }
	}
}

@mixin bp-max($point) {
	@if $point == mobile {
		@media (max-width: $screen-mobile) { @content; }
	}
	@else if $point == tablet {
		@media (max-width: $screen-tablet) { @content; }
	}
	@else if $point == desktop {
		@media (max-width: $screen-desktop) { @content; }
	}
}

@mixin bp-range($min, $max) {
	$breakpoint : '';
	@if $min == mobile {
		$breakpoint: '(min-width: ' + $screen-mobile + ')';
	}
	@else if $min == tablet {
		$breakpoint: '(min-width: ' + $screen-tablet + ')';
	}
	@else if $min == desktop {
		$breakpoint: '(min-width: ' + $screen-desktop + ')';
	}	
	$breakpoint: $breakpoint + ' and ';
	@if $max == mobile {
		$breakpoint: $breakpoint + '(max-width: ' + $screen-mobile + ')';
	}
	@else if $max == tablet {
		$breakpoint: $breakpoint + '(max-width: ' + $screen-tablet + ')';
	}
	@else if $max == desktop {
		$breakpoint: $breakpoint + '(max-width: ' + $screen-desktop + ')';
	}

	@media #{$breakpoint} { @content; }
}


// ANIMATION MIXINS
// --------------------------------|

@mixin animation($animation, $duration, $delay: 0s, $count: infinite, $timing: linear) {
  animation-name: $animation;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-iteration-count: $count;
  animation-fill-mode: forwards;
  animation-timing-function: $timing;
}


// SIZING-RELATED MIXINS
// --------------------------------|

@mixin perfect-square($size, $gutter: 0) {
	@if(not(unitless($size))) { $size: $size/100%; }
	$percentage: $size * 1%;
	@if(not($gutter == 0)) { $percentage: calc(#{$percentage} - #{$gutter}); }

	display: inline-block;
	width: $percentage;
	padding-bottom: $percentage;
	margin: #{$gutter/2};
}

@mixin columns($fractions, $breakpoint: '', $gutter: 0, $prefix: '') {
	@if($breakpoint == '') {
		@for $f from 1 through $fractions {
			$percentage: 100/$fractions * $f;

			.col-#{$percentage} {
				display: inline-block;
				box-sizing: border-box;
				@if($gutter != 0) { width: calc(#{$percentage*1%} - #{$gutter}); }
				@else { width: $percentage*1%; }
			}
		}
	} @else {
		@if($prefix == '') { $prefix: $breakpoint; }

		@include bp-min($breakpoint) {
			@for $f from 1 through $fractions {

				$percentage: 100/$fractions * $f;

				.col-#{$prefix}-#{$percentage} {
					display: inline-block;
					box-sizing: border-box;
					@if($gutter != 0) { width: calc(#{$percentage*1%} - #{$gutter}); }
					@else { width: $percentage*1%; }
				}
			}
		}
	}
}